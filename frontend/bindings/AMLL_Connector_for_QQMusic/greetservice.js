// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * @param {string} defaultDirectory
 * @returns {Promise<string> & { cancel(): void }}
 */
export function ChoseDir(defaultDirectory) {
    let $resultPromise = /** @type {any} */($Call.ByID(608441739, defaultDirectory));
    return $resultPromise;
}

/**
 * @returns {Promise<void> & { cancel(): void }}
 */
export function ConnectAmll() {
    let $resultPromise = /** @type {any} */($Call.ByID(268663012));
    return $resultPromise;
}

/**
 * @returns {Promise<void> & { cancel(): void }}
 */
export function DisconnectAmll() {
    let $resultPromise = /** @type {any} */($Call.ByID(232791296));
    return $resultPromise;
}

/**
 * @returns {Promise<$models.TimelineEventData[]> & { cancel(): void }}
 */
export function GetAllSmtc() {
    let $resultPromise = /** @type {any} */($Call.ByID(3134741750));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType1($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @returns {Promise<string> & { cancel(): void }}
 */
export function GetConfig() {
    let $resultPromise = /** @type {any} */($Call.ByID(3276044070));
    return $resultPromise;
}

/**
 * @param {string} key
 * @returns {Promise<any> & { cancel(): void }}
 */
export function GetConfigByKey(key) {
    let $resultPromise = /** @type {any} */($Call.ByID(1897901494, key));
    return $resultPromise;
}

/**
 * @returns {Promise<$models.LyricLine[]> & { cancel(): void }}
 */
export function GetNowLyrics() {
    let $resultPromise = /** @type {any} */($Call.ByID(402925824));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType3($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @returns {Promise<$models.MusicInfoMore> & { cancel(): void }}
 */
export function GetNowMusicInfo() {
    let $resultPromise = /** @type {any} */($Call.ByID(2159316135));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType4($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @returns {Promise<boolean> & { cancel(): void }}
 */
export function HideLyricWindow() {
    let $resultPromise = /** @type {any} */($Call.ByID(733970863));
    return $resultPromise;
}

/**
 * @returns {Promise<boolean> & { cancel(): void }}
 */
export function IsLyricWindowShow() {
    let $resultPromise = /** @type {any} */($Call.ByID(3434953514));
    return $resultPromise;
}

/**
 * @param {string} data
 * @returns {Promise<string> & { cancel(): void }}
 */
export function SetAllConfig(data) {
    let $resultPromise = /** @type {any} */($Call.ByID(3822313725, data));
    return $resultPromise;
}

/**
 * @param {string} key
 * @param {any} data
 * @returns {Promise<string> & { cancel(): void }}
 */
export function SetConfig(key, data) {
    let $resultPromise = /** @type {any} */($Call.ByID(3397273714, key, data));
    return $resultPromise;
}

/**
 * @returns {Promise<boolean> & { cancel(): void }}
 */
export function ShowLyricWindow() {
    let $resultPromise = /** @type {any} */($Call.ByID(543850744));
    return $resultPromise;
}

/**
 * @returns {Promise<boolean> & { cancel(): void }}
 */
export function ToggleLyricWindowShow() {
    let $resultPromise = /** @type {any} */($Call.ByID(2730688134));
    return $resultPromise;
}

/**
 * 这里加了激活窗口
 * @returns {Promise<void> & { cancel(): void }}
 */
export function TriggerSnapLayout() {
    let $resultPromise = /** @type {any} */($Call.ByID(1246228954));
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = $models.TimelineEventData.createFrom;
const $$createType1 = $Create.Array($$createType0);
const $$createType2 = $models.LyricLine.createFrom;
const $$createType3 = $Create.Array($$createType2);
const $$createType4 = $models.MusicInfoMore.createFrom;
