// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

/**
 * LyricLine 歌词行
 */
export class LyricLine {
    /**
     * Creates a new LyricLine instance.
     * @param {Partial<LyricLine>} [$$source = {}] - The source object to create the LyricLine.
     */
    constructor($$source = {}) {
        if (!("start_time" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["start_time"] = 0;
        }
        if (!("end_time" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["end_time"] = 0;
        }
        if (!("words" in $$source)) {
            /**
             * @member
             * @type {LyricWord[]}
             */
            this["words"] = [];
        }
        if (!("translated" in $$source)) {
            /**
             * @member
             * @type {NullString}
             */
            this["translated"] = (/** @type {NullString} */(""));
        }
        if (!("roman_lyric" in $$source)) {
            /**
             * @member
             * @type {NullString}
             */
            this["roman_lyric"] = (/** @type {NullString} */(""));
        }
        if (!("flag" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["flag"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new LyricLine instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {LyricLine}
     */
    static createFrom($$source = {}) {
        const $$createField2_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("words" in $$parsedSource) {
            $$parsedSource["words"] = $$createField2_0($$parsedSource["words"]);
        }
        return new LyricLine(/** @type {Partial<LyricLine>} */($$parsedSource));
    }
}

export class LyricWord {
    /**
     * Creates a new LyricWord instance.
     * @param {Partial<LyricWord>} [$$source = {}] - The source object to create the LyricWord.
     */
    constructor($$source = {}) {
        if (!("start_time" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["start_time"] = 0;
        }
        if (!("end_time" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["end_time"] = 0;
        }
        if (!("word" in $$source)) {
            /**
             * @member
             * @type {NullString}
             */
            this["word"] = (/** @type {NullString} */(""));
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new LyricWord instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {LyricWord}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new LyricWord(/** @type {Partial<LyricWord>} */($$parsedSource));
    }
}

export class MusicInfoMore {
    /**
     * Creates a new MusicInfoMore instance.
     * @param {Partial<MusicInfoMore>} [$$source = {}] - The source object to create the MusicInfoMore.
     */
    constructor($$source = {}) {
        if (!("title" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["title"] = "";
        }
        if (!("artist" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["artist"] = "";
        }
        if (!("album" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["album"] = "";
        }
        if (!("status" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["status"] = "";
        }
        if (!("duration" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["duration"] = 0;
        }
        if (!("lyric" in $$source)) {
            /**
             * @member
             * @type {LyricLine[]}
             */
            this["lyric"] = [];
        }
        if (!("lyricType" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["lyricType"] = "";
        }
        if (!("lyricRaw" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["lyricRaw"] = "";
        }
        if (!("mid" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["mid"] = "";
        }
        if (!("id" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["id"] = "";
        }
        if (!("albumId" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["albumId"] = "";
        }
        if (!("pic" in $$source)) {
            /**
             * 封面图片URL
             * @member
             * @type {string}
             */
            this["pic"] = "";
        }
        if (!("requestRaw" in $$source)) {
            /**
             * @member
             * @type {string[]}
             */
            this["requestRaw"] = [];
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new MusicInfoMore instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {MusicInfoMore}
     */
    static createFrom($$source = {}) {
        const $$createField5_0 = $$createType3;
        const $$createField11_0 = $Create.ByteSlice;
        const $$createField12_0 = $$createType4;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("lyric" in $$parsedSource) {
            $$parsedSource["lyric"] = $$createField5_0($$parsedSource["lyric"]);
        }
        if ("pic" in $$parsedSource) {
            $$parsedSource["pic"] = $$createField11_0($$parsedSource["pic"]);
        }
        if ("requestRaw" in $$parsedSource) {
            $$parsedSource["requestRaw"] = $$createField12_0($$parsedSource["requestRaw"]);
        }
        return new MusicInfoMore(/** @type {Partial<MusicInfoMore>} */($$parsedSource));
    }
}

/**
 * @typedef {string} NullString
 */

/**
 * @readonly
 * @enum {string}
 */
export const PlaybackStatus = {
    /**
     * The Go zero value for the underlying type of the enum.
     */
    $zero: "",

    PlaybackStatusPlaying: "Playing",
    PlaybackStatusPaused: "Paused",
    PlaybackStatusStopped: "Stopped",
    PlaybackStatusClosed: "Closed",
    PlaybackStatusUnknown: "Unknown",
};

export class TimelineEventData {
    /**
     * Creates a new TimelineEventData instance.
     * @param {Partial<TimelineEventData>} [$$source = {}] - The source object to create the TimelineEventData.
     */
    constructor($$source = {}) {
        if (!("appId" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["appId"] = "";
        }
        if (!("title" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["title"] = "";
        }
        if (!("artist" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["artist"] = "";
        }
        if (!("album" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["album"] = "";
        }
        if (!("playbackStatus" in $$source)) {
            /**
             * @member
             * @type {PlaybackStatus}
             */
            this["playbackStatus"] = (/** @type {PlaybackStatus} */(""));
        }
        if (!("timelinePositionMS" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["timelinePositionMS"] = 0;
        }
        if (!("timelineEndTimeMS" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["timelineEndTimeMS"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new TimelineEventData instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {TimelineEventData}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new TimelineEventData(/** @type {Partial<TimelineEventData>} */($$parsedSource));
    }
}

// Private type creation functions
const $$createType0 = LyricWord.createFrom;
const $$createType1 = $Create.Array($$createType0);
const $$createType2 = LyricLine.createFrom;
const $$createType3 = $Create.Array($$createType2);
const $$createType4 = $Create.Array($Create.Any);
